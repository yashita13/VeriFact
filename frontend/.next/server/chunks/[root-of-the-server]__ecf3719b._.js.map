{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 58, "column": 0}, "map": {"version":3,"sources":["file:///D:/FakeNews/frontend/firebase/admin.ts"],"sourcesContent":["import * as admin from 'firebase-admin';\r\n\r\n// We guard against re-initialization in Next.js dev\r\nconst apps = admin.apps;\r\n\r\nif (!apps.length) {\r\n  const projectId = process.env.FIREBASE_PROJECT_ID;\r\n  const clientEmail = process.env.FIREBASE_CLIENT_EMAIL;\r\n  let privateKey = process.env.FIREBASE_PRIVATE_KEY;\r\n\r\n  if (privateKey && privateKey.includes(\"\\\\n\")) {\r\n    privateKey = privateKey.replace(/\\\\n/g, \"\\n\");\r\n  }\r\n\r\n  if (!projectId || !clientEmail || !privateKey) {\r\n    console.warn('[firebase-admin] Missing admin credentials. Make sure FIREBASE_PROJECT_ID, FIREBASE_CLIENT_EMAIL, and FIREBASE_PRIVATE_KEY are set.');\r\n  } else {\r\n    admin.initializeApp({\r\n      credential: admin.credential.cert({\r\n        projectId,\r\n        clientEmail,\r\n        privateKey,\r\n      }),\r\n    });\r\n  }\r\n}\r\n\r\nexport const auth = admin.auth();\r\nexport const db = admin.firestore();\r\n"],"names":[],"mappings":";;;;AAAA;;AAEA,oDAAoD;AACpD,MAAM,OAAO,2HAAA,CAAA,OAAU;AAEvB,IAAI,CAAC,KAAK,MAAM,EAAE;IAChB,MAAM,YAAY,QAAQ,GAAG,CAAC,mBAAmB;IACjD,MAAM,cAAc,QAAQ,GAAG,CAAC,qBAAqB;IACrD,IAAI,aAAa,QAAQ,GAAG,CAAC,oBAAoB;IAEjD,IAAI,cAAc,WAAW,QAAQ,CAAC,QAAQ;QAC5C,aAAa,WAAW,OAAO,CAAC,QAAQ;IAC1C;IAEA,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,YAAY;QAC7C,QAAQ,IAAI,CAAC;IACf,OAAO;QACL,2HAAA,CAAA,gBAAmB,CAAC;YAClB,YAAY,2HAAA,CAAA,aAAgB,CAAC,IAAI,CAAC;gBAChC;gBACA;gBACA;YACF;QACF;IACF;AACF;AAEO,MAAM,OAAO,2HAAA,CAAA,OAAU;AACvB,MAAM,KAAK,2HAAA,CAAA,YAAe","debugId":null}},
    {"offset": {"line": 91, "column": 0}, "map": {"version":3,"sources":["file:///D:/FakeNews/frontend/app/api/auth/session/route.ts"],"sourcesContent":["import { cookies } from \"next/headers\";\r\nimport { auth } from \"@/firebase/admin\";\r\n\r\nconst ONE_WEEK = 60 * 60 * 24 * 7; // seconds\r\n\r\nexport async function POST(req: Request) {\r\n  try {\r\n    const { idToken } = await req.json();\r\n    if (!idToken) {\r\n      return new Response(JSON.stringify({ success: false, message: \"Missing idToken.\" }), { status: 400, headers: { \"content-type\": \"application/json\" } });\r\n    }\r\n\r\n    const sessionCookie = await auth.createSessionCookie(idToken, { expiresIn: ONE_WEEK * 1000 });\r\n\r\n    // Build Set-Cookie header manually to avoid typing headaches\r\n    const parts = [\r\n      `session=${sessionCookie}`,\r\n      `Max-Age=${ONE_WEEK}`,\r\n      `Path=/`,\r\n      `HttpOnly`,\r\n      `SameSite=Lax`,\r\n    ];\r\n    if (process.env.NODE_ENV === \"production\") parts.push(\"Secure\");\r\n\r\n    return new Response(JSON.stringify({ success: true }), {\r\n      status: 200,\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n        \"set-cookie\": parts.join(\"; \"),\r\n      },\r\n    });\r\n  } catch (e: any) {\r\n    console.error(\"[api/auth/session] error:\", e);\r\n    return new Response(JSON.stringify({ success: false, message: \"Failed to establish session.\" }), { status: 500, headers: { \"content-type\": \"application/json\" } });\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;AACA;;AAEA,MAAM,WAAW,KAAK,KAAK,KAAK,GAAG,UAAU;AAEtC,eAAe,KAAK,GAAY;IACrC,IAAI;QACF,MAAM,EAAE,OAAO,EAAE,GAAG,MAAM,IAAI,IAAI;QAClC,IAAI,CAAC,SAAS;YACZ,OAAO,IAAI,SAAS,KAAK,SAAS,CAAC;gBAAE,SAAS;gBAAO,SAAS;YAAmB,IAAI;gBAAE,QAAQ;gBAAK,SAAS;oBAAE,gBAAgB;gBAAmB;YAAE;QACtJ;QAEA,MAAM,gBAAgB,MAAM,mHAAA,CAAA,OAAI,CAAC,mBAAmB,CAAC,SAAS;YAAE,WAAW,WAAW;QAAK;QAE3F,6DAA6D;QAC7D,MAAM,QAAQ;YACZ,CAAC,QAAQ,EAAE,eAAe;YAC1B,CAAC,QAAQ,EAAE,UAAU;YACrB,CAAC,MAAM,CAAC;YACR,CAAC,QAAQ,CAAC;YACV,CAAC,YAAY,CAAC;SACf;QACD;;QAEA,OAAO,IAAI,SAAS,KAAK,SAAS,CAAC;YAAE,SAAS;QAAK,IAAI;YACrD,QAAQ;YACR,SAAS;gBACP,gBAAgB;gBAChB,cAAc,MAAM,IAAI,CAAC;YAC3B;QACF;IACF,EAAE,OAAO,GAAQ;QACf,QAAQ,KAAK,CAAC,6BAA6B;QAC3C,OAAO,IAAI,SAAS,KAAK,SAAS,CAAC;YAAE,SAAS;YAAO,SAAS;QAA+B,IAAI;YAAE,QAAQ;YAAK,SAAS;gBAAE,gBAAgB;YAAmB;QAAE;IAClK;AACF","debugId":null}}]
}