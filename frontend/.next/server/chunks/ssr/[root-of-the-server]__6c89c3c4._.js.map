{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 13, "column": 0}, "map": {"version":3,"sources":["file:///D:/FakeNews/frontend/firebase/admin.ts"],"sourcesContent":["import * as admin from 'firebase-admin';\r\n\r\n// We guard against re-initialization in Next.js dev\r\nconst apps = admin.apps;\r\n\r\nif (!apps.length) {\r\n  const projectId = process.env.FIREBASE_PROJECT_ID;\r\n  const clientEmail = process.env.FIREBASE_CLIENT_EMAIL;\r\n  let privateKey = process.env.FIREBASE_PRIVATE_KEY;\r\n\r\n  if (privateKey && privateKey.includes(\"\\\\n\")) {\r\n    privateKey = privateKey.replace(/\\\\n/g, \"\\n\");\r\n  }\r\n\r\n  if (!projectId || !clientEmail || !privateKey) {\r\n    console.warn('[firebase-admin] Missing admin credentials. Make sure FIREBASE_PROJECT_ID, FIREBASE_CLIENT_EMAIL, and FIREBASE_PRIVATE_KEY are set.');\r\n  } else {\r\n    admin.initializeApp({\r\n      credential: admin.credential.cert({\r\n        projectId,\r\n        clientEmail,\r\n        privateKey,\r\n      }),\r\n    });\r\n  }\r\n}\r\n\r\nexport const auth = admin.auth();\r\nexport const db = admin.firestore();\r\n"],"names":[],"mappings":";;;;AAAA;;AAEA,oDAAoD;AACpD,MAAM,OAAO,2HAAA,CAAA,OAAU;AAEvB,IAAI,CAAC,KAAK,MAAM,EAAE;IAChB,MAAM,YAAY,QAAQ,GAAG,CAAC,mBAAmB;IACjD,MAAM,cAAc,QAAQ,GAAG,CAAC,qBAAqB;IACrD,IAAI,aAAa,QAAQ,GAAG,CAAC,oBAAoB;IAEjD,IAAI,cAAc,WAAW,QAAQ,CAAC,QAAQ;QAC5C,aAAa,WAAW,OAAO,CAAC,QAAQ;IAC1C;IAEA,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,YAAY;QAC7C,QAAQ,IAAI,CAAC;IACf,OAAO;QACL,2HAAA,CAAA,gBAAmB,CAAC;YAClB,YAAY,2HAAA,CAAA,aAAgB,CAAC,IAAI,CAAC;gBAChC;gBACA;gBACA;YACF;QACF;IACF;AACF;AAEO,MAAM,OAAO,2HAAA,CAAA,OAAU;AACvB,MAAM,KAAK,2HAAA,CAAA,YAAe","debugId":null}},
    {"offset": {"line": 46, "column": 0}, "map": {"version":3,"sources":["file:///D:/FakeNews/frontend/lib/action/auth.action.ts"],"sourcesContent":["'use server';\r\n\r\nimport {auth, db} from \"@/firebase/admin\";\r\nimport { cookies } from \"next/headers\";\r\n\r\n// Types used by actions\r\nexport interface SignUpParams {\r\n  uid: string;\r\n  name: string;\r\n  email: string;\r\n}\r\n\r\nexport interface SignInParams {\r\n  email: string;\r\n  idToken: string;\r\n}\r\n\r\nexport interface User {\r\n  id: string;\r\n  name: string;\r\n  email: string;\r\n}\r\n\r\nconst ONE_WEEK=60*60*24*7;\r\n\r\nexport async function signUp(params: SignUpParams){\r\n    const {uid, name, email }=params;\r\n\r\n    try{\r\n        const userRecord=await db.collection('users').doc(uid).get();\r\n\r\n        if(userRecord.exists){\r\n            return {\r\n                success: false,\r\n                message: 'User already exists. Please sign in instead.'\r\n            }\r\n        }\r\n\r\n        await db.collection('users').doc(uid).set({\r\n            name, email\r\n        })\r\n\r\n        return{\r\n            success: true,\r\n            message: 'Account created successfully. Please sign in.'\r\n        }\r\n\r\n    }catch(e:any){\r\n        console.error('Error creating a user', e);\r\n\r\n        if(e.code === 'auth/email-already-exists'){\r\n            return {\r\n                success: false,\r\n                message: 'Email already in use.'\r\n            }\r\n        }\r\n\r\n        return{\r\n            success: false,\r\n            message: 'Failed to create an account.'\r\n        }\r\n    }\r\n}\r\n\r\nexport async function signIn(params: SignInParams){\r\n    const {email, idToken} = params;\r\n\r\n    try{\r\n        const userRecord=await auth.getUserByEmail(email);\r\n\r\n        if(!userRecord){\r\n            return{\r\n                success: false,\r\n                message: 'User does not exist. Please sign up instead.'\r\n            }\r\n        }\r\n\r\n        await setSessionCookie(idToken);\r\n        return { success: true };\r\n\r\n    }catch(e){\r\n        console.error('Error signing in', e);\r\n        return {\r\n            success: false,\r\n            message: 'Failed to sign in.'\r\n        }\r\n    }\r\n}\r\n\r\nexport async function setSessionCookie(idToken: string){\r\n    const cookieStore=await cookies();\r\n\r\n    const sessionCookie=await auth.createSessionCookie(idToken, {\r\n        expiresIn: ONE_WEEK*1000,    // 1 week * 1000ms\r\n    })\r\n\r\n    cookieStore.set('session', sessionCookie,{\r\n        maxAge:ONE_WEEK,\r\n        httpOnly:true,\r\n        secure:process.env.NODE_ENV==='production',\r\n        path:'/',\r\n        sameSite:'lax',\r\n    })\r\n}\r\n\r\nexport async function getCurrentUser(): Promise<User | null>{\r\n    const cookieStore = await cookies();\r\n\r\n    const sessionCookie = cookieStore.get('session')?.value;\r\n\r\n    if (!sessionCookie) {\r\n        return null;\r\n    }\r\n\r\n    try {\r\n        const decodedClaims = await auth.verifySessionCookie(sessionCookie, true);\r\n\r\n        // Try to read the Firestore user profile. If Firestore isn't initialized (NOT_FOUND)\r\n        // or the document doesn't exist yet, fall back to Auth claims so the app can proceed.\r\n        try {\r\n            const snap = await db\r\n                .collection('users')\r\n                .doc(decodedClaims.uid)\r\n                .get();\r\n\r\n            if (snap.exists) {\r\n                return {\r\n                    ...(snap.data() as any),\r\n                    id: snap.id,\r\n                } as User;\r\n            }\r\n        } catch (err: any) {\r\n            console.warn('[getCurrentUser] Firestore read failed; falling back to Auth claims. Ensure Firestore is created in Firebase Console.', err?.code || err);\r\n        }\r\n\r\n        // Fallback: build a minimal user from the verified token claims\r\n        const email = (decodedClaims as any)?.email || '';\r\n        const name = (decodedClaims as any)?.name || (email ? email.split('@')[0] : 'User');\r\n        return { id: decodedClaims.uid, name, email } as User;\r\n\r\n    } catch (e) {\r\n        console.log(e);\r\n        return null;\r\n    }\r\n}\r\n\r\nexport async function isAuthenticated(){\r\n    const user=await getCurrentUser();\r\n    return !!user;  // if user='' => !!''  !!false  !true  false\r\n}\r\n"],"names":[],"mappings":";;;;;;;;AAEA;AACA;;;;;AAoBA,MAAM,WAAS,KAAG,KAAG,KAAG;AAEjB,eAAe,OAAO,MAAoB;IAC7C,MAAM,EAAC,GAAG,EAAE,IAAI,EAAE,KAAK,EAAE,GAAC;IAE1B,IAAG;QACC,MAAM,aAAW,MAAM,iHAAA,CAAA,KAAE,CAAC,UAAU,CAAC,SAAS,GAAG,CAAC,KAAK,GAAG;QAE1D,IAAG,WAAW,MAAM,EAAC;YACjB,OAAO;gBACH,SAAS;gBACT,SAAS;YACb;QACJ;QAEA,MAAM,iHAAA,CAAA,KAAE,CAAC,UAAU,CAAC,SAAS,GAAG,CAAC,KAAK,GAAG,CAAC;YACtC;YAAM;QACV;QAEA,OAAM;YACF,SAAS;YACT,SAAS;QACb;IAEJ,EAAC,OAAM,GAAM;QACT,QAAQ,KAAK,CAAC,yBAAyB;QAEvC,IAAG,EAAE,IAAI,KAAK,6BAA4B;YACtC,OAAO;gBACH,SAAS;gBACT,SAAS;YACb;QACJ;QAEA,OAAM;YACF,SAAS;YACT,SAAS;QACb;IACJ;AACJ;AAEO,eAAe,OAAO,MAAoB;IAC7C,MAAM,EAAC,KAAK,EAAE,OAAO,EAAC,GAAG;IAEzB,IAAG;QACC,MAAM,aAAW,MAAM,iHAAA,CAAA,OAAI,CAAC,cAAc,CAAC;QAE3C,IAAG,CAAC,YAAW;YACX,OAAM;gBACF,SAAS;gBACT,SAAS;YACb;QACJ;QAEA,MAAM,iBAAiB;QACvB,OAAO;YAAE,SAAS;QAAK;IAE3B,EAAC,OAAM,GAAE;QACL,QAAQ,KAAK,CAAC,oBAAoB;QAClC,OAAO;YACH,SAAS;YACT,SAAS;QACb;IACJ;AACJ;AAEO,eAAe,iBAAiB,OAAe;IAClD,MAAM,cAAY,MAAM,CAAA,GAAA,+HAAA,CAAA,UAAO,AAAD;IAE9B,MAAM,gBAAc,MAAM,iHAAA,CAAA,OAAI,CAAC,mBAAmB,CAAC,SAAS;QACxD,WAAW,WAAS;IACxB;IAEA,YAAY,GAAG,CAAC,WAAW,eAAc;QACrC,QAAO;QACP,UAAS;QACT,QAAO,oDAAuB;QAC9B,MAAK;QACL,UAAS;IACb;AACJ;AAEO,eAAe;IAClB,MAAM,cAAc,MAAM,CAAA,GAAA,+HAAA,CAAA,UAAO,AAAD;IAEhC,MAAM,gBAAgB,YAAY,GAAG,CAAC,YAAY;IAElD,IAAI,CAAC,eAAe;QAChB,OAAO;IACX;IAEA,IAAI;QACA,MAAM,gBAAgB,MAAM,iHAAA,CAAA,OAAI,CAAC,mBAAmB,CAAC,eAAe;QAEpE,qFAAqF;QACrF,sFAAsF;QACtF,IAAI;YACA,MAAM,OAAO,MAAM,iHAAA,CAAA,KAAE,CAChB,UAAU,CAAC,SACX,GAAG,CAAC,cAAc,GAAG,EACrB,GAAG;YAER,IAAI,KAAK,MAAM,EAAE;gBACb,OAAO;oBACH,GAAI,KAAK,IAAI,EAAE;oBACf,IAAI,KAAK,EAAE;gBACf;YACJ;QACJ,EAAE,OAAO,KAAU;YACf,QAAQ,IAAI,CAAC,yHAAyH,KAAK,QAAQ;QACvJ;QAEA,gEAAgE;QAChE,MAAM,QAAQ,AAAC,eAAuB,SAAS;QAC/C,MAAM,OAAO,AAAC,eAAuB,QAAQ,CAAC,QAAQ,MAAM,KAAK,CAAC,IAAI,CAAC,EAAE,GAAG,MAAM;QAClF,OAAO;YAAE,IAAI,cAAc,GAAG;YAAE;YAAM;QAAM;IAEhD,EAAE,OAAO,GAAG;QACR,QAAQ,GAAG,CAAC;QACZ,OAAO;IACX;AACJ;AAEO,eAAe;IAClB,MAAM,OAAK,MAAM;IACjB,OAAO,CAAC,CAAC,MAAO,4CAA4C;AAChE;;;IA5HsB;IAuCA;IAyBA;IAgBA;IAyCA;;AAzHA,+OAAA;AAuCA,+OAAA;AAyBA,+OAAA;AAgBA,+OAAA;AAyCA,+OAAA","debugId":null}},
    {"offset": {"line": 183, "column": 0}, "map": {"version":3,"sources":["file:///D:/FakeNews/frontend/.next-internal/server/app/analyser/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {isAuthenticated as '00c3537acc5021fc63ac15275bd85e269ac1f353ee'} from 'ACTIONS_MODULE0'\nexport {getCurrentUser as '00fd65c9044871edd4cb98bc638aacfc55a4570b76'} from 'ACTIONS_MODULE0'\nexport {setSessionCookie as '4013b5ca8df5ffb0972cd4314316cc2e66efed4f7f'} from 'ACTIONS_MODULE0'\nexport {signUp as '405b52f901b1b9b9368e356bfe744bb403a48ba119'} from 'ACTIONS_MODULE0'\nexport {signIn as '40fa3a7c28358e9c315b879140c9f02d62de6feda1'} from 'ACTIONS_MODULE0'\n"],"names":[],"mappings":";AAAA","debugId":null}},
    {"offset": {"line": 235, "column": 0}, "map": {"version":3,"sources":["file:///D:/FakeNews/frontend/components/UploadForm.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/components/UploadForm.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/UploadForm.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,6OAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA6R,GAC1T,2DACA","debugId":null}},
    {"offset": {"line": 247, "column": 0}, "map": {"version":3,"sources":["file:///D:/FakeNews/frontend/components/UploadForm.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/components/UploadForm.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/UploadForm.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,6OAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAyQ,GACtS,uCACA","debugId":null}},
    {"offset": {"line": 259, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 267, "column": 0}, "map": {"version":3,"sources":["file:///D:/FakeNews/frontend/app/analyser/page.tsx"],"sourcesContent":["import { isAuthenticated } from \"@/lib/action/auth.action\";\r\nimport { redirect } from \"next/navigation\";\r\nimport UploadForm from \"@/components/UploadForm\";\r\n\r\nexport default async function AnalyserPage() {\r\n  const authed = await isAuthenticated();\r\n  if (!authed) redirect(\"/sign-in\");\r\n\r\n  return (\r\n    <main className=\"min-h-screen bg-black text-white py-12\">\r\n      <div className=\"max-w-5xl mx-auto px-6\">\r\n        <UploadForm />\r\n      </div>\r\n    </main>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AAAA;AACA;AAAA;AACA;;;;;AAEe,eAAe;IAC5B,MAAM,SAAS,MAAM,CAAA,GAAA,+HAAA,CAAA,kBAAe,AAAD;IACnC,IAAI,CAAC,QAAQ,CAAA,GAAA,qLAAA,CAAA,WAAQ,AAAD,EAAE;IAEtB,qBACE,8OAAC;QAAK,WAAU;kBACd,cAAA,8OAAC;YAAI,WAAU;sBACb,cAAA,8OAAC,yHAAA,CAAA,UAAU;;;;;;;;;;;;;;;AAInB","debugId":null}}]
}