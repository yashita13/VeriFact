{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 58, "column": 0}, "map": {"version":3,"sources":["file:///D:/IIIT/VeriFact/frontend/firebase/admin.ts"],"sourcesContent":["import * as admin from 'firebase-admin';\r\n\r\n// We guard against re-initialization in Next.js dev\r\nconst apps = admin.apps;\r\n\r\nif (!apps.length) {\r\n  const projectId = process.env.FIREBASE_PROJECT_ID;\r\n  const clientEmail = process.env.FIREBASE_CLIENT_EMAIL;\r\n  let privateKey = process.env.FIREBASE_PRIVATE_KEY;\r\n\r\n  if (privateKey && privateKey.includes(\"\\\\n\")) {\r\n    privateKey = privateKey.replace(/\\\\n/g, \"\\n\");\r\n  }\r\n\r\n  if (!projectId || !clientEmail || !privateKey) {\r\n    console.warn('[firebase-admin] Missing admin credentials. Make sure FIREBASE_PROJECT_ID, FIREBASE_CLIENT_EMAIL, and FIREBASE_PRIVATE_KEY are set.');\r\n  } else {\r\n    admin.initializeApp({\r\n      credential: admin.credential.cert({\r\n        projectId,\r\n        clientEmail,\r\n        privateKey,\r\n      }),\r\n    });\r\n  }\r\n}\r\n\r\nexport const auth = admin.auth();\r\nexport const db = admin.firestore();\r\n"],"names":[],"mappings":";;;;AAAA;;AAEA,oDAAoD;AACpD,MAAM,OAAO,2HAAA,CAAA,OAAU;AAEvB,IAAI,CAAC,KAAK,MAAM,EAAE;IAChB,MAAM,YAAY,QAAQ,GAAG,CAAC,mBAAmB;IACjD,MAAM,cAAc,QAAQ,GAAG,CAAC,qBAAqB;IACrD,IAAI,aAAa,QAAQ,GAAG,CAAC,oBAAoB;IAEjD,IAAI,cAAc,WAAW,QAAQ,CAAC,QAAQ;QAC5C,aAAa,WAAW,OAAO,CAAC,QAAQ;IAC1C;IAEA,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,YAAY;QAC7C,QAAQ,IAAI,CAAC;IACf,OAAO;QACL,2HAAA,CAAA,gBAAmB,CAAC;YAClB,YAAY,2HAAA,CAAA,aAAgB,CAAC,IAAI,CAAC;gBAChC;gBACA;gBACA;YACF;QACF;IACF;AACF;AAEO,MAAM,OAAO,2HAAA,CAAA,OAAU;AACvB,MAAM,KAAK,2HAAA,CAAA,YAAe","debugId":null}},
    {"offset": {"line": 91, "column": 0}, "map": {"version":3,"sources":["file:///D:/IIIT/VeriFact/frontend/app/api/auth/sign-up/route.ts"],"sourcesContent":["import { NextResponse } from \"next/server\";\r\nimport { db } from \"@/firebase/admin\";\r\n\r\nexport async function POST(req: Request) {\r\n  try {\r\n    const body = await req.json();\r\n    const { uid, name, email } = body || {};\r\n\r\n    if (!uid || !email) {\r\n      return new Response(JSON.stringify({ success: false, message: \"Missing uid or email.\" }), { status: 400, headers: { \"content-type\": \"application/json\" } });\r\n    }\r\n\r\n    // Write user profile to Firestore (idempotent create if not exists)\r\n    const ref = db.collection(\"users\").doc(uid);\r\n    const snap = await ref.get();\r\n    if (!snap.exists) {\r\n      await ref.set({ name: name || \"\", email });\r\n    }\r\n\r\n    return new Response(JSON.stringify({ success: true }), { status: 200, headers: { \"content-type\": \"application/json\" } });\r\n  } catch (e: any) {\r\n    console.error(\"[api/auth/sign-up] error:\", e);\r\n    return new Response(JSON.stringify({ success: false, message: \"Failed to create user profile.\" }), { status: 500, headers: { \"content-type\": \"application/json\" } });\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;AACA;;AAEO,eAAe,KAAK,GAAY;IACrC,IAAI;QACF,MAAM,OAAO,MAAM,IAAI,IAAI;QAC3B,MAAM,EAAE,GAAG,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,QAAQ,CAAC;QAEtC,IAAI,CAAC,OAAO,CAAC,OAAO;YAClB,OAAO,IAAI,SAAS,KAAK,SAAS,CAAC;gBAAE,SAAS;gBAAO,SAAS;YAAwB,IAAI;gBAAE,QAAQ;gBAAK,SAAS;oBAAE,gBAAgB;gBAAmB;YAAE;QAC3J;QAEA,oEAAoE;QACpE,MAAM,MAAM,mHAAA,CAAA,KAAE,CAAC,UAAU,CAAC,SAAS,GAAG,CAAC;QACvC,MAAM,OAAO,MAAM,IAAI,GAAG;QAC1B,IAAI,CAAC,KAAK,MAAM,EAAE;YAChB,MAAM,IAAI,GAAG,CAAC;gBAAE,MAAM,QAAQ;gBAAI;YAAM;QAC1C;QAEA,OAAO,IAAI,SAAS,KAAK,SAAS,CAAC;YAAE,SAAS;QAAK,IAAI;YAAE,QAAQ;YAAK,SAAS;gBAAE,gBAAgB;YAAmB;QAAE;IACxH,EAAE,OAAO,GAAQ;QACf,QAAQ,KAAK,CAAC,6BAA6B;QAC3C,OAAO,IAAI,SAAS,KAAK,SAAS,CAAC;YAAE,SAAS;YAAO,SAAS;QAAiC,IAAI;YAAE,QAAQ;YAAK,SAAS;gBAAE,gBAAgB;YAAmB;QAAE;IACpK;AACF","debugId":null}}]
}